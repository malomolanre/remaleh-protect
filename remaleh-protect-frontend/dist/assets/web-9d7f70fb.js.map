{"version":3,"file":"web-9d7f70fb.js","sources":["../../node_modules/@capgo/capacitor-social-login/dist/esm/base.js","../../node_modules/@capgo/capacitor-social-login/dist/esm/apple-provider.js","../../node_modules/@capgo/capacitor-social-login/dist/esm/facebook-provider.js","../../node_modules/@capgo/capacitor-social-login/dist/esm/google-provider.js","../../node_modules/@capgo/capacitor-social-login/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class BaseSocialLogin extends WebPlugin {\n    constructor() {\n        super();\n    }\n    parseJwt(token) {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(atob(base64)\n            .split('')\n            .map((c) => {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n            .join(''));\n        return JSON.parse(jsonPayload);\n    }\n    async loadScript(src) {\n        return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.src = src;\n            script.async = true;\n            script.onload = () => {\n                resolve();\n            };\n            script.onerror = reject;\n            document.body.appendChild(script);\n        });\n    }\n}\nBaseSocialLogin.OAUTH_STATE_KEY = 'social_login_oauth_pending';\n//# sourceMappingURL=base.js.map","import { BaseSocialLogin } from './base';\nexport class AppleSocialLogin extends BaseSocialLogin {\n    constructor() {\n        super(...arguments);\n        this.clientId = null;\n        this.redirectUrl = null;\n        this.scriptLoaded = false;\n        this.scriptUrl = 'https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js';\n    }\n    async initialize(clientId, redirectUrl) {\n        this.clientId = clientId;\n        this.redirectUrl = redirectUrl || null;\n        if (clientId) {\n            await this.loadAppleScript();\n        }\n    }\n    async login(options) {\n        if (!this.clientId) {\n            throw new Error('Apple Client ID not set. Call initialize() first.');\n        }\n        if (!this.scriptLoaded) {\n            throw new Error('Apple Sign-In script not loaded.');\n        }\n        return new Promise((resolve, reject) => {\n            var _a;\n            AppleID.auth.init({\n                clientId: this.clientId,\n                scope: ((_a = options.scopes) === null || _a === void 0 ? void 0 : _a.join(' ')) || 'name email',\n                redirectURI: this.redirectUrl || window.location.href,\n                state: options.state,\n                nonce: options.nonce,\n                usePopup: true,\n            });\n            AppleID.auth\n                .signIn()\n                .then((res) => {\n                var _a, _b, _c, _d, _e;\n                const result = {\n                    profile: {\n                        user: res.user || '',\n                        email: ((_a = res.user) === null || _a === void 0 ? void 0 : _a.email) || null,\n                        givenName: ((_c = (_b = res.user) === null || _b === void 0 ? void 0 : _b.name) === null || _c === void 0 ? void 0 : _c.firstName) || null,\n                        familyName: ((_e = (_d = res.user) === null || _d === void 0 ? void 0 : _d.name) === null || _e === void 0 ? void 0 : _e.lastName) || null,\n                    },\n                    accessToken: {\n                        token: res.authorization.id_token || '',\n                    },\n                    idToken: res.authorization.code || null,\n                };\n                resolve({ provider: 'apple', result });\n            })\n                .catch((error) => {\n                reject(error);\n            });\n        });\n    }\n    async logout() {\n        // Apple doesn't provide a logout method for web\n        console.log('Apple logout: Session should be managed on the client side');\n    }\n    async isLoggedIn() {\n        // Apple doesn't provide a method to check login status on web\n        console.log('Apple login status should be managed on the client side');\n        return { isLoggedIn: false };\n    }\n    async getAuthorizationCode() {\n        // Apple authorization code should be obtained during login\n        console.log('Apple authorization code should be stored during login');\n        throw new Error('Apple authorization code not available');\n    }\n    async refresh() {\n        // Apple doesn't provide a refresh method for web\n        console.log('Apple refresh not available on web');\n    }\n    async loadAppleScript() {\n        if (this.scriptLoaded)\n            return;\n        return this.loadScript(this.scriptUrl).then(() => {\n            this.scriptLoaded = true;\n        });\n    }\n}\n//# sourceMappingURL=apple-provider.js.map","import { BaseSocialLogin } from './base';\nexport class FacebookSocialLogin extends BaseSocialLogin {\n    constructor() {\n        super(...arguments);\n        this.appId = null;\n        this.scriptLoaded = false;\n        this.locale = 'en_US';\n    }\n    async initialize(appId, locale) {\n        this.appId = appId;\n        if (locale) {\n            this.locale = locale;\n        }\n        if (appId) {\n            // Load with the specified locale or default\n            await this.loadFacebookScript(this.locale);\n            FB.init({\n                appId: this.appId,\n                version: 'v17.0',\n                xfbml: true,\n                cookie: true,\n            });\n        }\n    }\n    async login(options) {\n        if (!this.appId) {\n            throw new Error('Facebook App ID not set. Call initialize() first.');\n        }\n        return new Promise((resolve, reject) => {\n            FB.login((response) => {\n                if (response.status === 'connected') {\n                    FB.api('/me', { fields: 'id,name,email,picture' }, (userInfo) => {\n                        var _a, _b;\n                        const result = {\n                            accessToken: {\n                                token: response.authResponse.accessToken,\n                                userId: response.authResponse.userID,\n                            },\n                            profile: {\n                                userID: userInfo.id,\n                                name: userInfo.name,\n                                email: userInfo.email || null,\n                                imageURL: ((_b = (_a = userInfo.picture) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.url) || null,\n                                friendIDs: [],\n                                birthday: null,\n                                ageRange: null,\n                                gender: null,\n                                location: null,\n                                hometown: null,\n                                profileURL: null,\n                            },\n                            idToken: null,\n                        };\n                        resolve({ provider: 'facebook', result });\n                    });\n                }\n                else {\n                    reject(new Error('Facebook login failed'));\n                }\n            }, { scope: options.permissions.join(',') });\n        });\n    }\n    async logout() {\n        return new Promise((resolve) => {\n            FB.logout(() => resolve());\n        });\n    }\n    async isLoggedIn() {\n        return new Promise((resolve) => {\n            FB.getLoginStatus((response) => {\n                resolve({ isLoggedIn: response.status === 'connected' });\n            });\n        });\n    }\n    async getAuthorizationCode() {\n        return new Promise((resolve, reject) => {\n            FB.getLoginStatus((response) => {\n                var _a;\n                if (response.status === 'connected') {\n                    resolve({ jwt: ((_a = response.authResponse) === null || _a === void 0 ? void 0 : _a.accessToken) || '' });\n                }\n                else {\n                    reject(new Error('No Facebook authorization code available'));\n                }\n            });\n        });\n    }\n    async refresh(options) {\n        await this.login(options);\n    }\n    async loadFacebookScript(locale) {\n        if (this.scriptLoaded)\n            return;\n        // Remove any existing Facebook SDK script\n        const existingScript = document.querySelector('script[src*=\"connect.facebook.net\"]');\n        if (existingScript) {\n            existingScript.remove();\n        }\n        return this.loadScript(`https://connect.facebook.net/${locale}/sdk.js`).then(() => {\n            this.scriptLoaded = true;\n        });\n    }\n}\n//# sourceMappingURL=facebook-provider.js.map","import { BaseSocialLogin } from './base';\nexport class GoogleSocialLogin extends BaseSocialLogin {\n    constructor() {\n        super(...arguments);\n        this.clientId = null;\n        this.loginType = 'online';\n        this.GOOGLE_TOKEN_REQUEST_URL = 'https://www.googleapis.com/oauth2/v3/tokeninfo';\n        this.GOOGLE_STATE_KEY = 'capgo_social_login_google_state';\n    }\n    async initialize(clientId, mode, hostedDomain, redirectUrl) {\n        this.clientId = clientId;\n        if (mode) {\n            this.loginType = mode;\n        }\n        this.hostedDomain = hostedDomain;\n        this.redirectUrl = redirectUrl;\n    }\n    async login(options) {\n        if (!this.clientId) {\n            throw new Error('Google Client ID not set. Call initialize() first.');\n        }\n        let scopes = options.scopes || [];\n        if (scopes.length > 0) {\n            // If scopes are provided, directly use the traditional OAuth flow\n            if (!scopes.includes('https://www.googleapis.com/auth/userinfo.email')) {\n                scopes.push('https://www.googleapis.com/auth/userinfo.email');\n            }\n            if (!scopes.includes('https://www.googleapis.com/auth/userinfo.profile')) {\n                scopes.push('https://www.googleapis.com/auth/userinfo.profile');\n            }\n            if (!scopes.includes('openid')) {\n                scopes.push('openid');\n            }\n        }\n        else {\n            scopes = [\n                'https://www.googleapis.com/auth/userinfo.email',\n                'https://www.googleapis.com/auth/userinfo.profile',\n                'openid',\n            ];\n        }\n        const nonce = options.nonce || Math.random().toString(36).substring(2);\n        // If scopes are provided, directly use the traditional OAuth flow\n        return this.traditionalOAuth({\n            scopes,\n            nonce,\n            hostedDomain: this.hostedDomain,\n        });\n    }\n    async logout() {\n        if (this.loginType === 'offline') {\n            return Promise.reject(\"Offline login doesn't store tokens. logout is not available\");\n        }\n        // eslint-disable-next-line\n        const state = this.getGoogleState();\n        if (!state)\n            return;\n        await this.rawLogoutGoogle(state.accessToken);\n    }\n    async isLoggedIn() {\n        if (this.loginType === 'offline') {\n            return Promise.reject(\"Offline login doesn't store tokens. isLoggedIn is not available\");\n        }\n        // eslint-disable-next-line\n        const state = this.getGoogleState();\n        if (!state)\n            return { isLoggedIn: false };\n        try {\n            const isValidAccessToken = await this.accessTokenIsValid(state.accessToken);\n            const isValidIdToken = this.idTokenValid(state.idToken);\n            if (isValidAccessToken && isValidIdToken) {\n                return { isLoggedIn: true };\n            }\n            else {\n                try {\n                    await this.rawLogoutGoogle(state.accessToken, false);\n                }\n                catch (e) {\n                    console.error('Access token is not valid, but cannot logout', e);\n                }\n                return { isLoggedIn: false };\n            }\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    async getAuthorizationCode() {\n        if (this.loginType === 'offline') {\n            return Promise.reject(\"Offline login doesn't store tokens. getAuthorizationCode is not available\");\n        }\n        // eslint-disable-next-line\n        const state = this.getGoogleState();\n        if (!state)\n            throw new Error('No Google authorization code available');\n        try {\n            const isValidAccessToken = await this.accessTokenIsValid(state.accessToken);\n            const isValidIdToken = this.idTokenValid(state.idToken);\n            if (isValidAccessToken && isValidIdToken) {\n                return { accessToken: state.accessToken, jwt: state.idToken };\n            }\n            else {\n                try {\n                    await this.rawLogoutGoogle(state.accessToken, false);\n                }\n                catch (e) {\n                    console.error('Access token is not valid, but cannot logout', e);\n                }\n                throw new Error('No Google authorization code available');\n            }\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    async refresh() {\n        // For Google, we can prompt for re-authentication\n        return Promise.reject('Not implemented');\n    }\n    handleOAuthRedirect(url) {\n        const paramsRaw = url.searchParams;\n        const code = paramsRaw.get('code');\n        if (code && paramsRaw.has('scope')) {\n            return {\n                provider: 'google',\n                result: {\n                    serverAuthCode: code,\n                    responseType: 'offline',\n                },\n            };\n        }\n        const hash = url.hash.substring(1);\n        console.log('handleOAuthRedirect', url.hash);\n        if (!hash)\n            return null;\n        console.log('handleOAuthRedirect ok');\n        const params = new URLSearchParams(hash);\n        const accessToken = params.get('access_token');\n        const idToken = params.get('id_token');\n        if (accessToken && idToken) {\n            localStorage.removeItem(BaseSocialLogin.OAUTH_STATE_KEY);\n            const profile = this.parseJwt(idToken);\n            return {\n                provider: 'google',\n                result: {\n                    accessToken: {\n                        token: accessToken,\n                    },\n                    idToken,\n                    profile: {\n                        email: profile.email || null,\n                        familyName: profile.family_name || null,\n                        givenName: profile.given_name || null,\n                        id: profile.sub || null,\n                        name: profile.name || null,\n                        imageUrl: profile.picture || null,\n                    },\n                    responseType: 'online',\n                },\n            };\n        }\n        return null;\n    }\n    async accessTokenIsValid(accessToken) {\n        const url = `${this.GOOGLE_TOKEN_REQUEST_URL}?access_token=${encodeURIComponent(accessToken)}`;\n        try {\n            // Make the GET request using fetch\n            const response = await fetch(url);\n            // Check if the response is successful\n            if (!response.ok) {\n                console.log(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response not successful. Status code: ${response.status}. Assuming that the token is not valid`);\n                return false;\n            }\n            // Get the response body as text\n            const responseBody = await response.text();\n            if (!responseBody) {\n                console.error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response body is null`);\n                throw new Error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response body is null`);\n            }\n            // Parse the response body as JSON\n            let jsonObject;\n            try {\n                jsonObject = JSON.parse(responseBody);\n            }\n            catch (e) {\n                console.error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response body is not valid JSON. Error: ${e}`);\n                throw new Error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response body is not valid JSON. Error: ${e}`);\n            }\n            // Extract the 'expires_in' field\n            const expiresInStr = jsonObject['expires_in'];\n            if (expiresInStr === undefined || expiresInStr === null) {\n                console.error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response JSON does not include 'expires_in'.`);\n                throw new Error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response JSON does not include 'expires_in'.`);\n            }\n            // Parse 'expires_in' as an integer\n            let expiresInInt;\n            try {\n                expiresInInt = parseInt(expiresInStr, 10);\n                if (isNaN(expiresInInt)) {\n                    throw new Error(`'expires_in' is not a valid integer`);\n                }\n            }\n            catch (e) {\n                console.error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. 'expires_in': ${expiresInStr} is not a valid integer. Error: ${e}`);\n                throw new Error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. 'expires_in': ${expiresInStr} is not a valid integer. Error: ${e}`);\n            }\n            // Determine if the access token is valid based on 'expires_in'\n            return expiresInInt > 5;\n        }\n        catch (error) {\n            console.error(error);\n            throw error;\n        }\n    }\n    idTokenValid(idToken) {\n        try {\n            const parsed = this.parseJwt(idToken);\n            const currentTime = Math.ceil(Date.now() / 1000) + 5; // Convert current time to seconds since epoch\n            return parsed.exp && currentTime < parsed.exp;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async rawLogoutGoogle(accessToken, tokenValid = null) {\n        if (tokenValid === null) {\n            tokenValid = await this.accessTokenIsValid(accessToken);\n        }\n        if (tokenValid === true) {\n            try {\n                await fetch(`https://accounts.google.com/o/oauth2/revoke?token=${encodeURIComponent(accessToken)}`);\n                this.clearStateGoogle();\n            }\n            catch (e) {\n                // ignore\n            }\n            return;\n        }\n        else {\n            this.clearStateGoogle();\n            return;\n        }\n    }\n    persistStateGoogle(accessToken, idToken) {\n        try {\n            window.localStorage.setItem(this.GOOGLE_STATE_KEY, JSON.stringify({ accessToken, idToken }));\n        }\n        catch (e) {\n            console.error('Cannot persist state google', e);\n        }\n    }\n    clearStateGoogle() {\n        try {\n            window.localStorage.removeItem(this.GOOGLE_STATE_KEY);\n        }\n        catch (e) {\n            console.error('Cannot clear state google', e);\n        }\n    }\n    getGoogleState() {\n        try {\n            const state = window.localStorage.getItem(this.GOOGLE_STATE_KEY);\n            if (!state)\n                return null;\n            const { accessToken, idToken } = JSON.parse(state);\n            return { accessToken, idToken };\n        }\n        catch (e) {\n            console.error('Cannot get state google', e);\n            return null;\n        }\n    }\n    async traditionalOAuth({ scopes, hostedDomain, nonce, }) {\n        const uniqueScopes = [...new Set([...(scopes || []), 'openid'])];\n        const params = new URLSearchParams(Object.assign(Object.assign({ client_id: this.clientId, redirect_uri: this.redirectUrl || window.location.origin + window.location.pathname, response_type: this.loginType === 'offline' ? 'code' : 'token id_token', scope: uniqueScopes.join(' ') }, (nonce && { nonce })), { include_granted_scopes: 'true', state: 'popup' }));\n        if (hostedDomain !== undefined) {\n            params.append('hd', hostedDomain);\n        }\n        const url = `https://accounts.google.com/o/oauth2/v2/auth?${params.toString()}`;\n        const width = 500;\n        const height = 600;\n        const left = window.screenX + (window.outerWidth - width) / 2;\n        const top = window.screenY + (window.outerHeight - height) / 2;\n        localStorage.setItem(BaseSocialLogin.OAUTH_STATE_KEY, 'true');\n        const popup = window.open(url, 'Google Sign In', `width=${width},height=${height},left=${left},top=${top},popup=1`);\n        let popupClosedInterval;\n        let timeoutHandle;\n        // This may never return...\n        return new Promise((resolve, reject) => {\n            if (!popup) {\n                reject(new Error('Failed to open popup'));\n                return;\n            }\n            const handleMessage = (event) => {\n                var _a, _b, _c;\n                if (event.origin !== window.location.origin || ((_b = (_a = event.data) === null || _a === void 0 ? void 0 : _a.source) === null || _b === void 0 ? void 0 : _b.startsWith('angular')))\n                    return;\n                if (((_c = event.data) === null || _c === void 0 ? void 0 : _c.type) === 'oauth-response') {\n                    window.removeEventListener('message', handleMessage);\n                    clearInterval(popupClosedInterval);\n                    if (this.loginType === 'online') {\n                        const { accessToken, idToken } = event.data;\n                        if (accessToken && idToken) {\n                            const profile = this.parseJwt(idToken);\n                            this.persistStateGoogle(accessToken.token, idToken);\n                            resolve({\n                                provider: 'google',\n                                result: {\n                                    accessToken: {\n                                        token: accessToken.token,\n                                    },\n                                    idToken,\n                                    profile: {\n                                        email: profile.email || null,\n                                        familyName: profile.family_name || null,\n                                        givenName: profile.given_name || null,\n                                        id: profile.sub || null,\n                                        name: profile.name || null,\n                                        imageUrl: profile.picture || null,\n                                    },\n                                    responseType: 'online',\n                                },\n                            });\n                        }\n                    }\n                    else {\n                        const { serverAuthCode } = event.data;\n                        resolve({\n                            provider: 'google',\n                            result: {\n                                responseType: 'offline',\n                                serverAuthCode,\n                            },\n                        });\n                    }\n                }\n                // Don't reject for non-OAuth messages, just ignore them\n            };\n            window.addEventListener('message', handleMessage);\n            // Timeout after 5 minutes\n            timeoutHandle = setTimeout(() => {\n                clearTimeout(timeoutHandle);\n                window.removeEventListener('message', handleMessage);\n                popup.close();\n                reject(new Error('OAuth timeout'));\n            }, 300000);\n            popupClosedInterval = setInterval(() => {\n                if (popup.closed) {\n                    clearInterval(popupClosedInterval);\n                    reject(new Error('Popup closed'));\n                }\n            }, 1000);\n        });\n    }\n}\n//# sourceMappingURL=google-provider.js.map","import { WebPlugin } from '@capacitor/core';\nimport { AppleSocialLogin } from './apple-provider';\nimport { FacebookSocialLogin } from './facebook-provider';\nimport { GoogleSocialLogin } from './google-provider';\nexport class SocialLoginWeb extends WebPlugin {\n    constructor() {\n        var _a;\n        super();\n        this.googleProvider = new GoogleSocialLogin();\n        this.appleProvider = new AppleSocialLogin();\n        this.facebookProvider = new FacebookSocialLogin();\n        // Set up listener for OAuth redirects if we have a pending OAuth flow\n        if (localStorage.getItem(SocialLoginWeb.OAUTH_STATE_KEY)) {\n            console.log('OAUTH_STATE_KEY found');\n            const result = this.handleOAuthRedirect();\n            if (result) {\n                (_a = window.opener) === null || _a === void 0 ? void 0 : _a.postMessage(Object.assign({ type: 'oauth-response' }, result.result), window.location.origin);\n                window.close();\n            }\n        }\n    }\n    handleOAuthRedirect() {\n        const url = new URL(window.location.href);\n        return this.googleProvider.handleOAuthRedirect(url);\n    }\n    async initialize(options) {\n        var _a, _b, _c;\n        const initPromises = [];\n        if ((_a = options.google) === null || _a === void 0 ? void 0 : _a.webClientId) {\n            initPromises.push(this.googleProvider.initialize(options.google.webClientId, options.google.mode, options.google.hostedDomain, options.google.redirectUrl));\n        }\n        if ((_b = options.apple) === null || _b === void 0 ? void 0 : _b.clientId) {\n            initPromises.push(this.appleProvider.initialize(options.apple.clientId, options.apple.redirectUrl));\n        }\n        if ((_c = options.facebook) === null || _c === void 0 ? void 0 : _c.appId) {\n            initPromises.push(this.facebookProvider.initialize(options.facebook.appId, options.facebook.locale));\n        }\n        await Promise.all(initPromises);\n    }\n    async login(options) {\n        switch (options.provider) {\n            case 'google':\n                return this.googleProvider.login(options.options);\n            case 'apple':\n                return this.appleProvider.login(options.options);\n            case 'facebook':\n                return this.facebookProvider.login(options.options);\n            default:\n                throw new Error(`Login for ${options.provider} is not implemented on web`);\n        }\n    }\n    async logout(options) {\n        switch (options.provider) {\n            case 'google':\n                return this.googleProvider.logout();\n            case 'apple':\n                return this.appleProvider.logout();\n            case 'facebook':\n                return this.facebookProvider.logout();\n            default:\n                throw new Error(`Logout for ${options.provider} is not implemented`);\n        }\n    }\n    async isLoggedIn(options) {\n        switch (options.provider) {\n            case 'google':\n                return this.googleProvider.isLoggedIn();\n            case 'apple':\n                return this.appleProvider.isLoggedIn();\n            case 'facebook':\n                return this.facebookProvider.isLoggedIn();\n            default:\n                throw new Error(`isLoggedIn for ${options.provider} is not implemented`);\n        }\n    }\n    async getAuthorizationCode(options) {\n        switch (options.provider) {\n            case 'google':\n                return this.googleProvider.getAuthorizationCode();\n            case 'apple':\n                return this.appleProvider.getAuthorizationCode();\n            case 'facebook':\n                return this.facebookProvider.getAuthorizationCode();\n            default:\n                throw new Error(`getAuthorizationCode for ${options.provider} is not implemented`);\n        }\n    }\n    async refresh(options) {\n        switch (options.provider) {\n            case 'google':\n                return this.googleProvider.refresh();\n            case 'apple':\n                return this.appleProvider.refresh();\n            case 'facebook':\n                return this.facebookProvider.refresh(options.options);\n            default:\n                throw new Error(`Refresh for ${options.provider} is not implemented`);\n        }\n    }\n    async providerSpecificCall(options) {\n        throw new Error(`Provider specific call for ${options.call} is not implemented`);\n    }\n}\nSocialLoginWeb.OAUTH_STATE_KEY = 'social_login_oauth_pending';\n//# sourceMappingURL=web.js.map"],"names":["BaseSocialLogin","WebPlugin","token","base64","jsonPayload","c","src","resolve","reject","script","AppleSocialLogin","clientId","redirectUrl","options","_a","res","_b","_c","_d","_e","result","error","FacebookSocialLogin","appId","locale","response","userInfo","existingScript","GoogleSocialLogin","mode","hostedDomain","scopes","nonce","state","isValidAccessToken","isValidIdToken","e","url","paramsRaw","code","hash","params","accessToken","idToken","profile","responseBody","jsonObject","expiresInStr","expiresInInt","parsed","currentTime","tokenValid","uniqueScopes","width","height","left","top","popup","popupClosedInterval","timeoutHandle","handleMessage","event","serverAuthCode","SocialLoginWeb","initPromises"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}